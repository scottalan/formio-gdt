<?php

/**
 * Implements hook_schema().
 */
function formio_schema() {
  return formio_schema_1();
}

/**
 * Schema version 1.
 */
function formio_schema_1() {
  $schema['formio_form'] = array(
    'description' => t('Table storing form definitions.'),
    'export' => array(
      'key' => 'name',
      'key name' => 'Unique Name',
      'admin_title' => 'title',
      'primary key' => 'pid',
      'identifier' => 'formio',
      'default hook' => 'formio_form',
      'export type string' => 'state',
      'api' => array(
        'owner' => 'formio',
        'api' => 'formio',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
      // The callbacks will not be called unless they are implemented. These
      // are here in case we need to override any of these callbacks in the
      // future.
      'create callback' => 'formio_export_create',
      'load callback' => 'formio_export_load',
      'save callback' => 'formio_export_save',
      'delete callback' => 'formio_export_delete',
    ),
    'fields' => array(
      'pid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
        'no export' => TRUE, // Do not export database-only keys.
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Name for the form.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Title for the form.',
      ),
      'id' => array(
        'type' => 'varchar',
        'length' => '24',
        'description' => 'The _id of the Formio form.',
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'The form path on formio.',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Type of form. Typically form or resource.',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the form was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the form was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'components' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of components on this form.',
      ),
      'action' => array(
        'type' => 'varchar',
        'length' => '64',
        'description' => 'The action that will performed when the form is submitted.',
      ),
      'action_settings' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of action settings specific to this form.',
      ),
    ),
    'primary key' => array('pid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  $schema['formio'] = array(
    'description' => 'Table storing formio submissions',
    'fields' => array(
      'sid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Submission ID field for the table.',
        'no export' => TRUE, // Do not export database-only keys.
      ),
      'id' => array(
        'type' => 'varchar',
        'length' => '24',
        'description' => 'The _id of the Formio submission.',
      ),
      'form' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'The form for this submission.',
      ),
      'owner' => array(
        'description' => 'The {users}.uid that owns this node; initially, this is the user that created it.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the node was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the node was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('sid'),
  );
  return $schema;
}
